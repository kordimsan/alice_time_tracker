# generated by datamodel-codegen:
#   filename:  request_example.json
#   timestamp: 2021-11-28T19:00:48+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel


class Interfaces(BaseModel):
    screen: Dict[str, Any]
    payments: Dict[str, Any]
    account_linking: Dict[str, Any]


class Meta(BaseModel):
    locale: str
    timezone: str
    client_id: str
    interfaces: Interfaces


class User(BaseModel):
    user_id: str


class Application(BaseModel):
    application_id: str


class Session(BaseModel):
    message_id: int
    session_id: str
    skill_id: str
    user: User
    application: Application
    user_id: str
    new: bool


class Tokens(BaseModel):
    start: int
    end: int


class Nlu(BaseModel):
    tokens: List[str]
    entities: List
    intents: Dict[str, Any]


class Markup(BaseModel):
    dangerous_context: bool


class Request(BaseModel):
    command: str
    original_utterance: str
    nlu: Nlu
    markup: Markup
    type: str


class State(BaseModel):
    session: Dict[str, Any]
    user: Dict[str, Any]
    application: Dict[str, Any]


class AliceRequest(BaseModel):
    meta: Meta
    session: Session
    request: Request
    state: Optional[State]
    version: str
